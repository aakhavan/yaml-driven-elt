
x-airflow-common: &airflow-common
  image: apache/airflow:2.8.1
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres_airflow/airflow
    - _PIP_ADDITIONAL_REQUIREMENTS=apache-airflow-providers-docker clickhouse-connect pandas
    - PYTHONPATH=/opt/airflow/scripts
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./scripts:/opt/airflow/scripts
    - /var/run/docker.sock:/var/run/docker.sock
  networks:
    - elt_network

services:
  # -------------------------------------
  # PostgreSQL for Airflow Metadata
  # -------------------------------------
  postgres_airflow:
    image: postgres:13
    container_name: postgres_airflow_local
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-airflow-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
    networks:
      - elt_network

  # -------------------------------------
  # ClickHouse Data Warehouse
  # -------------------------------------
  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse_dwh_local
    ports:
      - "8124:8123"
      - "9001:9000"
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elt_network

  clickhouse-init:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse_init_local
    entrypoint: /bin/bash
    command: >
      -c "clickhouse-client --host clickhouse-server --user admin --password admin --query=
      'CREATE DATABASE IF NOT EXISTS reporting;
      CREATE DATABASE IF NOT EXISTS intermediate;'"
    depends_on:
      clickhouse-server:
        condition: service_healthy
    networks:
      - elt_network
  # -------------------------------------
  # dbt Service (for DockerOperator)
  # -------------------------------------
  dbt:
    build:
      context: ./dbt
    image: dbt-clickhouse-olist:latest
    volumes:
      - ./dbt:/usr/app/dbt
    working_dir: /usr/app/dbt
    container_name: dbt_service
    entrypoint: /bin/bash
    command: -c "tail -f /dev/null"
    networks:
      - elt_network
  # -------------------------------------
  # Airflow Initialization Service
  # -------------------------------------
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init_local
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create --role Admin --username airflow_admin --password airflow_admin --email admin@example.com --firstname Local --lastname Admin
    depends_on:
      postgres_airflow:
        condition: service_healthy

  # -------------------------------------
  # Airflow Webserver Service
  # -------------------------------------
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver_local
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - .env

  # -------------------------------------
  # Airflow Scheduler Service
  # -------------------------------------
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler_local
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - .env
  
  # -------------------------------------
  # Streamlit Dashboard (BI Tool)
  # -------------------------------------
  dashboard:
    build:
      context: ./dashboard
    container_name: streamlit_dashboard_local
    ports:
      - "8501:8501"
    depends_on:
      clickhouse-server:
        condition: service_healthy
    networks:
      - elt_network
    volumes:
      - .env:/app/.env

volumes:
  postgres-airflow-data:
  clickhouse-data:
  airflow-logs:

networks:
  elt_network:
    driver: bridge
    name: etl_network